name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"
        continue-on-error: false

  build-and-push-image:
    name: Build and Push Docker Image
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Build and Tag Docker Image with Commit Hash
        id: build-image
        run: |
          IMAGE_TAG=${GITHUB_SHA::7} # Set IMAGE_TAG to the first 7 characters of the commit SHA
          echo "Image will be tagged as: shayan704/redoproject:$IMAGE_TAG" # Debug logging
          docker build -t shayan704/redoproject:$IMAGE_TAG .
          docker tag shayan704/redoproject:$IMAGE_TAG shayan704/redoproject:latest
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV # Set IMAGE_TAG as an environment variable for the next steps

      - name: Login to DockerHub
        run: |
          if ! echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin; then
            echo "DockerHub login failed!"
            exit 1
          fi

      - name: Push Docker Image to DockerHub
        run: |
          echo "Pushing Docker image with tag: $IMAGE_TAG"
          docker push shayan704/redoproject:$IMAGE_TAG
          docker push shayan704/redoproject:latest

      - name: Clean up Docker Images
        run: |
          echo "Cleaning up unused Docker images and containers"
          docker system prune -af

  deploy-on-render:
    name: Deploy on Render
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            -H 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -d '{"serviceId": "${{ secrets.RENDER_SERVICE_ID }}", "clearCache": false}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
